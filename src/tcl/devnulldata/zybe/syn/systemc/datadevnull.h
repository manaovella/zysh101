// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _datadevnull_HH_
#define _datadevnull_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "devnull.h"

namespace ap_rtl {

struct datadevnull : public sc_module {
    // Port declarations 12
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_lv<32> > inv_V_TDATA;
    sc_in< sc_logic > inv_V_TVALID;
    sc_out< sc_logic > inv_V_TREADY;
    sc_out< sc_lv<32> > params_V_Addr_A;
    sc_out< sc_logic > params_V_EN_A;
    sc_out< sc_lv<4> > params_V_WEN_A;
    sc_out< sc_lv<32> > params_V_Din_A;
    sc_in< sc_lv<32> > params_V_Dout_A;
    sc_out< sc_logic > params_V_Clk_A;
    sc_out< sc_logic > params_V_Rst_A;


    // Module declarations
    datadevnull(sc_module_name name);
    SC_HAS_PROCESS(datadevnull);

    ~datadevnull();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    devnull* grp_devnull_fu_34;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > inv_V_0_vld_in;
    sc_signal< sc_logic > inv_V_0_ack_out;
    sc_signal< sc_lv<2> > inv_V_0_state;
    sc_signal< sc_logic > grp_devnull_fu_34_ap_start;
    sc_signal< sc_logic > grp_devnull_fu_34_ap_done;
    sc_signal< sc_logic > grp_devnull_fu_34_ap_idle;
    sc_signal< sc_logic > grp_devnull_fu_34_ap_ready;
    sc_signal< sc_lv<32> > grp_devnull_fu_34_params_V_Addr_A;
    sc_signal< sc_logic > grp_devnull_fu_34_params_V_EN_A;
    sc_signal< sc_lv<4> > grp_devnull_fu_34_params_V_WEN_A;
    sc_signal< sc_lv<32> > grp_devnull_fu_34_params_V_Din_A;
    sc_signal< sc_logic > ap_reg_grp_devnull_fu_34_ap_start;
    sc_signal< sc_lv<2> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<2> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<2> ap_ST_fsm_state1;
    static const sc_lv<2> ap_ST_fsm_state2;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_rst_n_inv();
    void thread_grp_devnull_fu_34_ap_start();
    void thread_inv_V_0_ack_out();
    void thread_inv_V_0_vld_in();
    void thread_inv_V_TREADY();
    void thread_params_V_Addr_A();
    void thread_params_V_Clk_A();
    void thread_params_V_Din_A();
    void thread_params_V_EN_A();
    void thread_params_V_Rst_A();
    void thread_params_V_WEN_A();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
