// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _nco_HH_
#define _nco_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "nco_sinarray_V.h"

namespace ap_rtl {

struct nco : public sc_module {
    // Port declarations 15
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_lv<32> > phasein_V_TDATA;
    sc_in< sc_logic > phasein_V_TVALID;
    sc_out< sc_logic > phasein_V_TREADY;
    sc_out< sc_lv<32> > dataout_V_TDATA;
    sc_out< sc_logic > dataout_V_TVALID;
    sc_in< sc_logic > dataout_V_TREADY;
    sc_out< sc_lv<32> > params_V_Addr_A;
    sc_out< sc_logic > params_V_EN_A;
    sc_out< sc_lv<4> > params_V_WEN_A;
    sc_out< sc_lv<32> > params_V_Din_A;
    sc_in< sc_lv<32> > params_V_Dout_A;
    sc_out< sc_logic > params_V_Clk_A;
    sc_out< sc_logic > params_V_Rst_A;


    // Module declarations
    nco(sc_module_name name);
    SC_HAS_PROCESS(nco);

    ~nco();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    nco_sinarray_V* sinarray_V_U;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_lv<32> > phasein_V_0_data_out;
    sc_signal< sc_logic > phasein_V_0_vld_in;
    sc_signal< sc_logic > phasein_V_0_vld_out;
    sc_signal< sc_logic > phasein_V_0_ack_in;
    sc_signal< sc_logic > phasein_V_0_ack_out;
    sc_signal< sc_lv<32> > phasein_V_0_payload_A;
    sc_signal< sc_lv<32> > phasein_V_0_payload_B;
    sc_signal< sc_logic > phasein_V_0_sel_rd;
    sc_signal< sc_logic > phasein_V_0_sel_wr;
    sc_signal< sc_logic > phasein_V_0_sel;
    sc_signal< sc_logic > phasein_V_0_load_A;
    sc_signal< sc_logic > phasein_V_0_load_B;
    sc_signal< sc_lv<2> > phasein_V_0_state;
    sc_signal< sc_logic > phasein_V_0_state_cmp_full;
    sc_signal< sc_lv<32> > dataout_V_1_data_out;
    sc_signal< sc_logic > dataout_V_1_vld_in;
    sc_signal< sc_logic > dataout_V_1_vld_out;
    sc_signal< sc_logic > dataout_V_1_ack_in;
    sc_signal< sc_logic > dataout_V_1_ack_out;
    sc_signal< sc_lv<32> > dataout_V_1_payload_A;
    sc_signal< sc_lv<32> > dataout_V_1_payload_B;
    sc_signal< sc_logic > dataout_V_1_sel_rd;
    sc_signal< sc_logic > dataout_V_1_sel_wr;
    sc_signal< sc_logic > dataout_V_1_sel;
    sc_signal< sc_logic > dataout_V_1_load_A;
    sc_signal< sc_logic > dataout_V_1_load_B;
    sc_signal< sc_lv<2> > dataout_V_1_state;
    sc_signal< sc_logic > dataout_V_1_state_cmp_full;
    sc_signal< sc_lv<10> > sinarray_V_address0;
    sc_signal< sc_logic > sinarray_V_ce0;
    sc_signal< sc_lv<22> > sinarray_V_q0;
    sc_signal< sc_logic > phasein_V_TDATA_blk_n;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > dataout_V_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<7> > tmp_2_reg_125;
    sc_signal< sc_lv<32> > tmp_121_fu_110_p4;
    sc_signal< sc_lv<32> > tmp_1_cast_fu_91_p1;
    sc_signal< sc_lv<10> > tmp_cast_fu_81_p4;
    sc_signal< sc_lv<24> > tmp_data_V_cast_fu_106_p1;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_state2;
    static const sc_lv<4> ap_ST_fsm_state3;
    static const sc_lv<4> ap_ST_fsm_state4;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_rst_n_inv();
    void thread_dataout_V_1_ack_in();
    void thread_dataout_V_1_ack_out();
    void thread_dataout_V_1_data_out();
    void thread_dataout_V_1_load_A();
    void thread_dataout_V_1_load_B();
    void thread_dataout_V_1_sel();
    void thread_dataout_V_1_state_cmp_full();
    void thread_dataout_V_1_vld_in();
    void thread_dataout_V_1_vld_out();
    void thread_dataout_V_TDATA();
    void thread_dataout_V_TDATA_blk_n();
    void thread_dataout_V_TVALID();
    void thread_params_V_Addr_A();
    void thread_params_V_Clk_A();
    void thread_params_V_Din_A();
    void thread_params_V_EN_A();
    void thread_params_V_Rst_A();
    void thread_params_V_WEN_A();
    void thread_phasein_V_0_ack_in();
    void thread_phasein_V_0_ack_out();
    void thread_phasein_V_0_data_out();
    void thread_phasein_V_0_load_A();
    void thread_phasein_V_0_load_B();
    void thread_phasein_V_0_sel();
    void thread_phasein_V_0_state_cmp_full();
    void thread_phasein_V_0_vld_in();
    void thread_phasein_V_0_vld_out();
    void thread_phasein_V_TDATA_blk_n();
    void thread_phasein_V_TREADY();
    void thread_sinarray_V_address0();
    void thread_sinarray_V_ce0();
    void thread_tmp_121_fu_110_p4();
    void thread_tmp_1_cast_fu_91_p1();
    void thread_tmp_cast_fu_81_p4();
    void thread_tmp_data_V_cast_fu_106_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
